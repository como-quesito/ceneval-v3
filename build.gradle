
import ro.isdc.wro.model.resource.*
import ro.isdc.wro.extensions.processor.js.*


buildscript {
    ext {
        springBootVersion = '1.3.0.M3'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url 'http://dl.bintray.com/sbuettner/maven' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.springframework:springloaded:1.2.1.RELEASE'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'war'
sourceSets {
    main {
        resources {

            excludes = ['**/node_modules/*']
            java.lang.System.out.println("Quitando todo lo de node_module pues, ");

        }
    }
}



war {
    baseName = 'unitec'
}

sourceCompatibility = 1.7
targetCompatibility = 1.7
/*
jar{
    baseName='unitec'
}
*/
repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url  "http://dl.bintray.com/sbuettner/maven"}

}

configurations {
    providedRuntime
}

dependencies {

    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile 'org.mongodb:mongo-java-driver:2.12.3'
    //compile("org.springframework:spring-jms")
    //compile("org.apache.activemq:activemq-broker")
   // compile 'org.springframework.amqp:spring-rabbit:1.4.5.RELEASE'

    compile("javax.inject:javax.inject:1")
    compile("com.fasterxml.jackson.core:jackson-databind")
    compile("org.projectlombok:lombok:1.16.2")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-joda:2.6.0-rc1")
    compile("org.springframework.boot:spring-boot-devtools")
  //  compile(group: 'de.infinit', name: 'spring-boot-autoconfigure-wro4j', version: '0.0.6')
  //  compile 'org.webjars.npm:angular-bootstrap:0.12.2'
  //  compile 'org.webjars.npm:bootstrap:3.3.5'
   // compile 'org.webjars.npm:angular:1.4.4'
   // compile 'org.webjars.npm:angular-route:1.4.4'
   // compile 'org.webjars.npm:jquery:2.1.4'
   // compile 'org.webjars.npm:angular-resource:1.4.4'
    /*
    nOTA IMPORTANTE: PARA CREAR WL WAR DEBES DE COMETRA EL DE compile de tomcat y DESCOMENTAR EL DE providedRuntime
    PARA PORVAR EN EL 8080 ES LO OPUESTO
     */
  // providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
  compile("org.springframework.boot:spring-boot-starter-tomcat")
    testCompile("org.springframework.boot:spring-boot-starter-test") 
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

